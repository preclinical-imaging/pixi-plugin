#* @vtlvariable name="subjects" type="java.util.List<org.nrg.xdat.om.XnatSubjectdata>" *#
#* @vtlvariable name="hotel" type="org.nrg.xdat.om.PixiHotel" *#

#if ($data.message)
<div class="alert">$data.message</div>
#end

#if ($project)
#else
    #set($project=$item.getProperty("project"))
#end

#set($subjectOptions=[["", "Empty"]])
#foreach($subject in $subjects)
    #if (!$subject.label.equalsIgnoreCase("Hotel"))
        #set($subjectOption = [$subject.id,$subject.label])
        #set($temp = $subjectOptions.add($subjectOption))
    #end
#end

#set($orientations=[
    ["HFP","Head First-Prone"],
    ["HFS","Head First-Supine"],
    ["FFP","Feet First-Prone"],
    ["FFS","Feet First-Supine"],
    ["LFP","Left First-Prone"],
    ["LFS","Left First-Supine"],
    ["RFP","Right First-Prone"],
    ["RFS","Right First-Supine"],
    ["HFDR","Head First-Decubitus Right"],
    ["HFDL","Head First-Decubitus Left"],
    ["FFDR","Feet First-Decubitus Right"],
    ["FFDL","Feet First-Decubitus Left"],
    ["AFDR","Anterior First-Decubitus Right"],
    ["AFDL","Anterior First-Decubitus Left"],
    ["PFDR","Posterior First-Decubitus Right"],
    ["PFDL","Posterior First-Decubitus Left"]
    ])

#set($heatingMethods = [
    "Air heating pad",
    "Electric blanket",
    "Electric heating pad",
    "Forced air heater",
    "Forced air warming blanket",
    "Heated imaging device",
    "Heated patient support",
    "Heated water blanket",
    "Heat lamp",
    "Non-electric heating pad",
    "Pre-heated pad",
    "Unheated",
    "Warmer device",
    "Warming blanket"
])

#set($temperatureSensorDeviceComponents = [
    "Rectal temperature",
    "Thermography",
    "Carrier temperature sensor"
])

#set($anesthesias = [
    "Alphachloralose",
    "Alphadolone",
    "Alphaxalone",
    "Azaperone",
    "Butabarbital",
    "Chloral hydrate",
    "Diazepam",
    "Droperidol",
    "Etomidate",
    "Fluanisone",
    "Ketamine",
    "Methohexital",
    "Metomidate",
    "Midazolam",
    "Pentobarbital",
    "Propofol",
    "Thiamylal",
    "Thiopental",
    "Tiletamine",
    "Tribromoethanol",
    "Urethane (ethyl carbamate)",
    "Xylazine",
    "Zolazepam",

    "Carbon dioxide",
    "Chloroform",
    "Desflurane",
    "Diethyl ether",
    "Enflurane",
    "Halothane",
    "Isoflurane",
    "Methoxyflurane",
    "Nitrous oxide",
    "Sevoflurane",

    "Acepromazine",
    "Chlorpromazine",

    "Succinylcholine",
    "Pancuronium",

    "Bupivacaine",
    "Lidocaine + Prilocaine",
    "Lidocaine"
])

#set($routes = [
    "Intraperitoneal route",
    "By inhalation",
    "Intravenous route",
    "Per rectum",
    "Intramuscular route"
])

<datalist id="heatingMethods">
    #foreach($val in $heatingMethods)
    <option value="$val">
    #end
</datalist>

<datalist id="temperatureSensorDeviceComponents">
    #foreach($val in $temperatureSensorDeviceComponents)
    <option value="$val">
    #end
</datalist>

<datalist id="anesthesias">
    #foreach($val in $anesthesias)
    <option value="$val">
    #end
</datalist>

<datalist id="routes">
    #foreach($val in $routes)
    <option value="$val">
    #end
</datalist>

#macro (pixiTimeBox $name $item $defaultValue $vr)
<!-- macro: pixiTimeBox -->
    #if ($vr)
        #if($vr.getField($name))
        <div class="warning">&#8658;</div>
        #end
    #end
    #if ($item.getProperty($name))
        #if($item.isPKField($name) && (!$vr.getField($name)))
        <input id="$name" type="hidden" name="$name" value="$item.getProperty($name)"/>
            #escapeHTML($!turbineUtils.unescapeParam("$item.getStringProperty($name)"))
        #else
        <input id="$name" type="time" step="10" name="$name" placeholder="--:--:-- --" value="$item.getProperty($name)"/>
        #end
    #else
    <input id="$name" type="time" step="10" name="$name" placeholder="--:--:-- --" value="$defaultValue"/>
    #end
#end

## modify the xdatSelectBox macro and remove custom values
#macro (pixiSelectBox $name $class $item $possibleValues $vr)
<!-- macro: pixiSelectBox -->
    #if ($vr)
        #if($vr.getField($name))
        <div class="warning">&#8658;</div>
        #end
    #end

    #if($possibleValues)
        #if ($possibleValues.size()==0)
            <input id="$name" type="text" name="$name" class="$class" value="$item.getProperty($name)"/>
        #else
            <select id="$name" name="$name" class="$class">
                <option value="">(SELECT)</option>
                #foreach ($pValue in $possibleValues)
                    #if($pValue.size() > 0)
                        <option value="$pValue.get(0)" #if($pValue.get(0).equals($item.getProperty($name))) SELECTED #end>$pValue.get(1)</option>
                    #else
                        <option value="$pValue" #if($pValue.equals($item.getProperty($name))) SELECTED #end>$pValue</option>
                    #end
                #end
            </select>
        #end
    #else
    <input id="$name" type="text" name="$name" value="$item.getProperty($name)"/>
    #end
#end

#macro (pixiHiddenBox $name $class $item $defaultValue)
<!-- macro: pixiHiddenBox -->
    #if ($item.getProperty($name))
    <input id="$name" type="hidden" name="$name" class="$class" value="$item.getProperty($name)"/>
    #else
    <input id="$name" type="hidden" name="$name" class="$class" value="$defaultValue"/>
    #end
#end

#set($presetSessionLabel = $!turbineUtils.GetPassedParameter("session_label",$data,""))
#set($presetSessionDate = $!turbineUtils.GetPassedParameter("session_date",$data,""))
#set($editSessionId = $!turbineUtils.GetPassedParameter("edit_session",$data,"n/a"))

<form ID="form1" name="form1" method="post" action="$link.setAction("ModifyPixiItem")">
##	<input type="hidden" name="project" value="$!{project}" >
	#if($vr)
		<div class="warning">Invalid parameters:<BR>$vr.toHTML()</div>
	#end

	<h1>#if(!$om.getId())Create #else Edit #end Scan Record for Hotel Session</h1>

    <input id="project" type="hidden" name="project" value="${project}">
    <input id="pixi:hotelScanRecord/project" type="hidden" name="pixi:hotelScanRecord/project" value="${project}">

##    #parse("/screens/xnat_edit_experimentData.vm")

    <input type="hidden" name="$!item.getXSIType()/ID" id="$!item.getXSIType()/ID" value="$!item.getProperty("ID")"/>
    <input type="hidden" name="$!item.getXSIType()/label" id="$!item.getXSIType()/label" value="$!item.getProperty("label")"/>
    <input type="hidden" name="$!{item.getXSIType()}.ID" id="$!{item.getXSIType()}.ID" value="$!item.getProperty("ID")"/>

    #xdatHiddenBox("pixi:hotelScanRecord/status" $item "Ready To Split")

    <script type="text/javascript">
        var elementName="$!item.getXSIType()";
    </script>
    <script type="text/javascript" LANGUAGE="JavaScript" src="$content.getURI('scripts/xnat_edit_experimentData.js')"></script>

    ## If this is a new record, show the session selector interface. If not, show a standard editing UI
    ## Also check to see if a session was provided in URL parameters
    ## Finally, check to see if the user wants to edit the existing session in a scan record -- if so, show the full UI
    #if((!$om.getId() && $!presetSessionLabel.length().equals(0)) || $!editSessionId != "n/a")
        <h3>Select a Hotel Session</h3>
        <input name="edit_session_id" value="$!{editSessionId}" type="hidden">

        <div class="column-container col-2">
            <div class="column">
                <div class="panel panel-default session-source active" data-source="existing">
                    <div class="panel-body">
                        <div class="panel-element stacked">
                            <label class="element-label">
                                <input type="radio" name="session_existence" value="existing" class="session-source-toggle" checked>
                                Session is already in XNAT
                            </label>
                        </div>

                        <div class="panel-element stacked">
                            <label class="element-label pull-left" for="session-selector">Select Image Session</label>
                            <div class="pull-right">
                                <label class="filter-icon" for="session-filter"><i class="fa fa-search"></i></label>
                                <input type="text" id="session-filter" name="session-filter" placeholder="Filter" onkeyup="" class="filter-input"/>
                            </div>
                            <div class="element-wrapper">
                                <select name="pixi:hotelScanRecord/session_label" id="session-selector" size="8"></select>
                                <div class="description">
                                    Session Date: <span class="selected-session-date"></span>
                                    <input type="hidden" name="pixi:hotelScanRecord/date" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="column">
                <div class="panel panel-default session-source disabled" data-source="new">
                    <div class="panel-body">
                        <div class="panel-element stacked disabled">
                            <label class="element-label">
                                <input type="radio" name="session_existence" value="new" class="session-source-toggle">
                                Session is being scanned now
                            </label>
                        </div>

                        <div class="panel-element stacked disabled">
                            <label class="element-label">
                                Define Session Label
                            </label>
                            <div class="element-wrapper">
                                <input id="new-session-label" type="text" name="pixi:hotelScanRecord/session_label" disabled />
                            </div>
                        </div>

                        <div class="panel-element stacked disabled">
                            <label class="element-label">
                                Define Session Date
                            </label>
                            <div class="element-wrapper">
                                <span id="session-datepicker" class="single us today" data-value="" data-validate="onblur" data-input-name="pixi:hotelScanRecord/date"></span>
                                <script type="text/javascript">
                                    jq('#session-datepicker').data('value',XNAT.data.todaysDate.us);
                                    XNAT.app.datePicker.init(jq('#session-datepicker'));
                                </script>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    #else
        <h3>Hotel Session</h3>
        #if(!$!presetSessionLabel.length().equals(0))
            #set ($sessionId=$presetSessionLabel)
            <div class="column">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <p><strong>Image Session:</strong> <a href="$content.getURI("/data/projects/${project}/experiments/${presetSessionLabel}?format=html")" class="selected-session-label">${presetSessionLabel}</a> <i class="spacer pad5"></i> <a href="#!" onclick="changeHotelSession()"><button class="btn btn-sm">Edit</button> </a></p>
                        <p><strong>Session Date:</strong> <span class="selected-session-date">${presetSessionDate}</span></p>
                        <input type="hidden" id="pixi:hotelScanRecord/date" name="pixi:hotelScanRecord/date" value="${presetSessionDate}">
                        <input type="hidden" id="pixi:hotelScanRecord/session_label" name="pixi:hotelScanRecord/session_label" value="${presetSessionLabel}">
                    </div>
                </div>
            </div>
        #else
            #set ($sessionId=$item.getStringProperty("session_label"))
            <div class="column">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <p><strong>Image Session:</strong> <a href="$content.getURI("/data/projects/${project}/experiments/${sessionId}?format=html")" class="selected-session-label">$item.getStringProperty("session_label")</a> <i class="spacer pad5"></i> <a href="#!" onclick="changeHotelSession()"><button class="btn btn-sm">Edit</button> </a></p>
                        <p><strong>Session Date:</strong> <span class="selected-session-date">$!item.getProperty("pixi:hotelScanRecord/date")</span></p>
                        #xdatHiddenBox("pixi:hotelScanRecord/session_label" $item "")
                    </div>
                </div>
            </div>
        #end
        <script>
            function changeHotelSession(){
                XNAT.dialog.open({
                    title: 'Page Reload Required',
                    width: 350,
                    content: '<p>A page reload is required to change the session associated with this scan record. Any edits on this page will be lost.</p>',
                    buttons: [
                        {
                            label: 'OK',
                            isDefault: true,
                            close: true,
                            action: function(){
                                let url = window.location.href+'/edit_session/${sessionId}';
                                window.location.assign(url);
                            }
                        },
                        {
                            label: 'Cancel',
                            close: true
                        }
                    ]
                })
            }
        </script>
    #end


    <h3>Define Hotel Session Record</h3>
    #if(!$om.getId())
        <div class="panel-element">
            <div class="element-wrapper">
                <label>
                    <select class="hotel-selector" name="pixi:hotelScanRecord/hotel" id="pixi:hotelScanRecord/hotel" onchange="XNAT.plugin.pixi.handleHotelSelection()">
                        <option>Select Hotel Type</option>
                    </select>
                </label>
            </div>

        </div>
    #else
        <p><strong>Hotel Type:</strong> $item.getStringProperty("pixi:hotelScanRecord/hotel")</p>
        #xdatHiddenBox("pixi:hotelScanRecord/hotel" $item "")
    #end

    <style>
        .template-selector {
            margin: 0 10px 0 0;
        }
    </style>

    <h4>Apply Fasting / Heating / Anesthesia Templates (Optional)</h4>

    <label for="fasting-template-selector">Fasting</label>
    <select class="template-selector" id="fasting-template-selector">
        <option>Select Template</option>
    </select>

    <label for="heating-template-selector">Heating</label>
    <select class="template-selector" id="heating-template-selector">
        <option>Select Template</option>
    </select>

    <label for="anesthesia-template-selector">Anesthesia</label>
    <select class="template-selector" id="anesthesia-template-selector">
        <option>Select Template</option>
    </select>

    <button class="btn btn-sm" type="button" id="apply-templates">Apply</button>

    <p>Note: These templates will only be applied to non-empty hotel positions.</p>

    <div id="hotel-units" class="column-container col-2">
        #if($om.getId())

            #set($start = 0)
            #set($end = $hotel.positions_position.size() - 1)
            #foreach($i in [$start..$end])
                #set($positionName = $hotel.positions_position.get($i).name)

                <div class="column">
                <div class="panel panel-default hotel-unit">
                    <div class="panel-body">
                        <h4>Position: <span class="hotel-unit-position">$positionName</span></h4>
                        <input type="hidden" name="pixi:hotelScanRecord/hotel_subjects/subject[$i]/position" value="$positionName" />
                        <div class="panel-element stacked">
                            <label class="element-label" for="pixi:hotelScanRecord/hotel_subjects/subject[$i]/subject_id">
                                Subject ID
                            </label>
                            <div class="element-wrapper">
                                #pixiSelectBox("pixi:hotelScanRecord/hotel_subjects/subject[$i]/subject_id" "subject-selector" $item $subjectOptions $vr)
                            </div>
                            #pixiHiddenBox("pixi:hotelScanRecord/hotel_subjects/subject[$i]/subject_label" "subject-label-selector" $item "" $vr)
                        </div>

                        <div class="panel-element stacked">
                            <label class="element-label">
                                Orientation
                            </label>
                            <div class="element-wrapper">
                                <label>
                                    #pixiSelectBox("pixi:hotelScanRecord/hotel_subjects/subject[$i]/orientation" "" $item $orientations $vr)
                                </label>
                            </div>

                        </div>

                        <div class="panel-element stacked">
                            <label class="element-label" for="pixi:hotelScanRecord/hotel_subjects/subject[$i]/weight">
                                Weight (g)
                            </label>
                            <div class="element-wrapper">
                                #xdatTextBox("pixi:hotelScanRecord/hotel_subjects/subject[$i]/weight" $item "" $vr)
                            </div>

                        </div>

                        <div class="panel-element stacked">
                            <label class="element-label" for="pixi:hotelScanRecord/hotel_subjects/subject[$i]/injection_time">
                                Injection Time
                            </label>
                            <div class="element-wrapper">
                                #pixiTimeBox("pixi:hotelScanRecord/hotel_subjects/subject[$i]/injection_time" $item "" $vr)
                            </div>

                        </div>

                        <div class="panel-element stacked">
                            <label class="element-label" for="pixi:hotelScanRecord/hotel_subjects/subject[$i]/activity">
                                Activity (mCi)
                            </label>
                            <div class="element-wrapper">
                                #xdatTextBox("pixi:hotelScanRecord/hotel_subjects/subject[$i]/activity" $item "" $vr)
                            </div>

                        </div>

                        <hr>

                        <!-- Fasting -->
                        <div class="panel-element stacked">
                            <label class="element-label" for="pixi:hotelScanRecord/hotel_subjects/subject[$i]/imageAcquisitionContext/fasting/fastingStatus">
                                Fasting Status
                            </label>
                            <div class="element-wrapper">
                                <select name="pixi:hotelScanRecord/hotel_subjects/subject[$i]/imageAcquisitionContext/fasting/fastingStatus" id="pixi:hotelScanRecord/hotel_subjects/subject[$i]/imageAcquisitionContext/fasting/fastingStatus">
                                    <option value="">(SELECT)</option>
                                    <option value="1" #if($item.getProperty("pixi:hotelScanRecord/hotel_subjects/subject[$i]/imageAcquisitionContext/fasting/fastingStatus") == "1") selected #end>Fasted</option>
                                    <option value="0" #if($item.getProperty("pixi:hotelScanRecord/hotel_subjects/subject[$i]/imageAcquisitionContext/fasting/fastingStatus") == "0") selected #end>Not Fasted</option>
                                </select>
                            </div>
                        </div>
                        <div class="panel-element stacked">
                            <label class="element-label" for="pixi:hotelScanRecord/hotel_subjects/subject[$i]/imageAcquisitionContext/fasting/fastingDuration">
                                Fasting Duration (hours)
                            </label>
                            <div class="element-wrapper">
                                #xdatTextBox("pixi:hotelScanRecord/hotel_subjects/subject[$i]/imageAcquisitionContext/fasting/fastingDuration" $item "" $vr)
                            </div>
                        </div>

                        <hr>

                        <!-- Heating Conditions -->
                        #set($heatingConditions = "pixi:hotelScanRecord/hotel_subjects/subject[" + $i + "]/imageAcquisitionContext/heatingConditions[0]/heatingConditions")

                        <div class="panel-element stacked" style="display: none">
                            <label class="element-label" for="pixi:hotelScanRecord/hotel_subjects/subject[$i]/imageAcquisitionContext/heatingConditions[0]/heatingConditions">
                                Heating Conditions Procedure Phase
                            </label>
                            <div class="element-wrapper">
                                <select name="$heatingConditions/procedurePhase" value="$item.getProperty("$heatingConditions/procedurePhase")">
                                    <option value="Intraoperative" #if($item.getProperty("$heatingConditions/procedurePhase") == "Intraoperative") selected #end>Intraoperative</option>
                                    <option value="Preoperative" #if($item.getProperty("$heatingConditions/procedurePhase") == "Preoperative") selected #end>Preoperative</option>
                                    <option value="Postoperative" #if($item.getProperty("$heatingConditions/procedurePhase") == "Postoperative") selected #end>Postoperative</option>
                                    <option value="" #if($item.getProperty("$heatingConditions/procedurePhase") == "") selected #end></option>
                                </select>
                            </div>
                        </div>

                        <div class="panel-element stacked">
                            <label class="element-label" for="$heatingConditions/heatingMethod">
                                Heating Method
                            </label>
                            <div class="element-wrapper">
                                <input list="heatingMethods"
                                       class="form-control"
                                       id="$heatingConditions/heatingMethod"
                                       name="$heatingConditions/heatingMethod"
                                       value="$!item.getProperty("$heatingConditions/heatingMethod")">
                            </div>
                        </div>

                        <div class="panel-element stacked">
                            <label class="element-label" for="$heatingConditions/feedbackTemperatureRegulation">
                                Feedback Temperature Regulation
                            </label>
                            <div class="element-wrapper">
                                <select name="$heatingConditions/feedbackTemperatureRegulation" id="$heatingConditions/feedbackTemperatureRegulation">
                                    <option value="">(SELECT)</option>
                                    <option value="1" #if($item.getProperty("$heatingConditions/feedbackTemperatureRegulation") == "1") selected #end>Yes</option>
                                    <option value="0" #if($item.getProperty("$heatingConditions/feedbackTemperatureRegulation") == "0") selected #end>No</option>
                                </select>
                            </div>
                        </div>

                        <div class="panel-element stacked">
                            <label class="element-label" for="$heatingConditions/temperatureSensorDeviceComponent">
                                Temperature Sensor Device Component
                            </label>
                            <div class="element-wrapper">
                                <input list="temperatureSensorDeviceComponents"
                                       id="$heatingConditions/temperatureSensorDeviceComponent"
                                       name="$heatingConditions/temperatureSensorDeviceComponent"
                                       value="$!item.getProperty("$heatingConditions/temperatureSensorDeviceComponent")">
                            </div>
                        </div>

                        <div class="panel-element stacked">
                            <label class="element-label" for="$heatingConditions/setpointTemperature">
                                Setpoint Temperature (&#8451;)
                            </label>
                            <div class="element-wrapper">
                                #xdatTextBox("$heatingConditions/setpointTemperature" $item "" $vr)
                            </div>
                        </div>

                        <hr>

                        <!-- Anesthesia -->
                        #set($anesthesias = "pixi:hotelScanRecord/hotel_subjects/subject[" + $i + "]/imageAcquisitionContext/anesthesias[0]/anesthesia")

                        <div class="panel-element stacked">
                            <label class="element-label" for="$anesthesias/anesthesia">
                                Anesthesia Used
                            </label>
                            <div class="element-wrapper">
                                <input list="anesthesias"
                                       id="$anesthesias/anesthesia"
                                       name="$anesthesias/anesthesia"
                                       value="$!item.getProperty("$anesthesias/anesthesia")">
                            </div>
                        </div>

                        <div class="panel-element stacked">
                            <label class="element-label" for="$anesthesias/routeOfAdministration">
                                Route of Administration
                            </label>
                            <div class="element-wrapper">
                                <input list="routes"
                                       id="$anesthesias/routeOfAdministration"
                                       name="$anesthesias/routeOfAdministration"
                                       value="$!item.getProperty("$anesthesias/routeOfAdministration")">
                            </div>
                        </div>

                        <hr>

                        <!-- Notes -->
                        <div class="panel-element stacked">
                            <label class="element-label" for="pixi:hotelScanRecord/hotel_subjects/subject[$i]/notes">
                                Notes
                            </label>
                            <div class="element-wrapper">
                                    <textarea cols="4"
                                              id="pixi:hotelScanRecord/hotel_subjects/subject[$i]/notes"
                                              name="pixi:hotelScanRecord/hotel_subjects/subject[$i]/notes"
                                    >$!item.getProperty("pixi:hotelScanRecord/hotel_subjects/subject[$i]/notes")</textarea>
                            </div>
                        </div>

                        <!-- Split Session Label -->
                        <div class="panel-element stacked" style="display: none">
                            <label class="element-label" for="pixi:hotelScanRecord/hotel_subjects/subject[$i]/split_session_label">
                                Split Session Label
                            </label>
                            <div class="element-wrapper">
                                #xdatTextBox("pixi:hotelScanRecord/hotel_subjects/subject[$i]/split_session_label" $item "" $vr)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            #end

        #else
            <div class="message">Please select a hotel to display hotel units</div>
        #end

    </div>

    #xdatEditProps($item "XDATScreen_edit_pixi_hotelScanRecord.vm")

##    #xdatHiddenBox("popup" $item "false")
##    #xdatHiddenBox("edit_screen" $item "XDATScreen_edit_pixi_hotelScanRecord.vm")
##    #xdatHiddenBox("ELEMENT_0" $item "pixi:hotelScanRecord")


	<p>
        <input type="button" class="btn1" ONCLICK="validateForm();"  name="eventSubmit_doInsert" value="Submit"/>
    </p>

</form>

<script type="text/javascript">
    var XNAT = getObject(XNAT || {});
    XNAT.plugin = getObject(XNAT.plugin || {});
    XNAT.plugin.pixi = getObject(XNAT.plugin.pixi || {});

    XNAT.plugin.pixi.pixiSubjects = [{ value: '', label: 'Empty'}];
    #foreach( $subject in $subjects)
        #if (!$subject.label.equalsIgnoreCase("Hotel"))
        XNAT.plugin.pixi.pixiSubjects.push({ value: '$subject.id', label: '$subject.label' });
        #end
    #end
</script>
<script src="$content.getURI("scripts/xnat/plugin/pixi/pixi-editScanRecord.js")"></script>
<script type="text/javascript">
    const newExperiment = ("$!om.getId()".length === 0);
    XNAT.plugin.pixi.initScanRecord(newExperiment);
</script>

#if($!presetSessionLabel.length().equals(0))
#else
<script>
    XNAT.plugin.pixi.setLabel("$presetSessionLabel")
</script>
#end

<script>
    const numSubjects = $subjects.size();

    const toggleFastingStatus = (i) => {
        const fastingStatus = document.querySelector(`input[name="pixi:hotelScanRecord/hotel_subjects/subject[${i}]/imageAcquisitionContext/fasting/fastingStatus"]:checked`).value;
        const fastingDuration = document.querySelector(`input[name="pixi:hotelScanRecord/hotel_subjects/subject[${i}]/imageAcquisitionContext/fasting/fastingDuration"]`);
        if (fastingStatus === "1") {
            fastingDuration.disabled = false;
        } else {
            fastingDuration.disabled = true;
            fastingDuration.value = "";
        }
    }

    // Add event listeners to all fasting status radio buttons
    // Not sure how many hotel subjects there will be, so we'll just loop through 10
    for (let i = 0; i < 10; i++) {
        document.querySelectorAll(`input[name="pixi:hotelScanRecord/hotel_subjects/subject[${i}]/imageAcquisitionContext/fasting/fastingStatus"]`).forEach((el) => {
            toggleFastingStatus(i);
            el.addEventListener("change", () => toggleFastingStatus(i))
        });
    }
</script>

<script>
    const sessionSelector = document.getElementById('session-selector');
    const sessionFilter = document.getElementById('session-filter');

    const filterSessions = (event) => {
        console.debug('Filtering sessions');

        const filter = event.target.value.toLowerCase();
        let sessions = Array.from(sessionSelector.options);

        sessions.forEach((session) => {
            session.hidden = !session.text.toLowerCase().includes(filter);
        });
    }

    sessionFilter.addEventListener('keyup', filterSessions);
</script>

<script src="$content.getURI("scripts/xnat/plugin/pixi/pixi-imageAcqCtx.js")"></script>
<script>

    const fastingTemplateSelector = document.querySelector("#fasting-template-selector");
    const anesthesiaTemplateSelector = document.querySelector("#anesthesia-template-selector");
    const heatingConditionsSelector = document.querySelector("#heating-template-selector");

    const scope = XNAT.data.context.project ? 'Project' : 'Site';
    const entityId = XNAT.data.context.project || null;

    XNAT.plugin.pixi.imageAcqCtx.fasting.get(scope, entityId).then((config) => {
        config['fastingTemplates'].forEach(template => {
            fastingTemplateSelector[fastingTemplateSelector.options.length] = new Option(template['name'], template['name'], false, template['defaultTemplate']);
        })
    });

    XNAT.plugin.pixi.imageAcqCtx.anesthesia.get(scope, entityId).then((config) => {
        config['anesthesiaTemplates'].forEach(template => {
            anesthesiaTemplateSelector[anesthesiaTemplateSelector.options.length] = new Option(template['name'], template['name'], false, template['defaultTemplate']);
        })
    });

    XNAT.plugin.pixi.imageAcqCtx.heatingConditions.get(scope, entityId).then((config) => {
        config['templates'].forEach(template => {
            heatingConditionsSelector[heatingConditionsSelector.options.length] = new Option(template['name'], template['name'], false, template['defaultTemplate']);
        })
    });

    const getHotelPosition = (el) => {
        const match = el.name.match(/subject\[(\d+)\]/);
        if (match) {
            return match[1];
        }
        return null;
    }

    const handleFastingTemplateChange = () => {
        const fastingTemplate = fastingTemplateSelector.value;
        if (fastingTemplate.length > 0) {
            XNAT.plugin.pixi.imageAcqCtx.fasting.get(scope, entityId).then((fastingConfig) => {
                const fastingTemplate = fastingConfig['fastingTemplates'].find(fastingTemplate => fastingTemplate['name'] === fastingTemplateSelector.value);

                // populate empty hotel positions
                const nonemptyHotelPositions = [];
                document.querySelectorAll('select[name*=subject_id]').forEach((el) => {
                    if (el.value !== '') {
                        nonemptyHotelPositions.push(getHotelPosition(el));
                    }
                });

                document.querySelectorAll(`select[id*=fastingStatus]`).forEach((el) => {
                    if (nonemptyHotelPositions.includes(getHotelPosition(el))) {
                        if (fastingTemplate['fasting']['fastingStatus']) {
                            el.value = 1;
                        } else if (!fastingTemplate['fasting']['fastingStatus']) {
                            el.value = 0;
                        } else {
                            el.value = "";
                        }
                    }
                });

                document.querySelectorAll(`input[id*=fasting-duration],input[id*=fastingDuration]`).forEach((el) => {
                    if (nonemptyHotelPositions.includes(getHotelPosition(el))) {
                        if (fastingTemplate['fasting']['fastingStatus']) {
                            el.disabled = false;
                            el.value = fastingTemplate['fasting']['fastingDuration'];
                        } else {
                            el.disabled = true;
                            el.value = "";
                        }
                    }
                });
            });
        }
    }

    const handleAnesthesiaTemplateChange = () => {
        const anesthesiaTemplate = anesthesiaTemplateSelector.value;
        if (anesthesiaTemplate.length > 0) {
            XNAT.plugin.pixi.imageAcqCtx.anesthesia.get(scope, entityId).then((anesthesiaConfig) => {
                const anesthesiaTemplate = anesthesiaConfig['anesthesiaTemplates'].find(anesthesiaTemplate => anesthesiaTemplate['name'] === anesthesiaTemplateSelector.value);

                // populate empty hotel positions
                const nonemptyHotelPositions = [];
                document.querySelectorAll('select[name*=subject_id]').forEach((el) => {
                    if (el.value !== '') {
                        nonemptyHotelPositions.push(getHotelPosition(el));
                    }
                });

                document.querySelectorAll(`input[id$=anesthesia]`).forEach((el) => {
                    if (nonemptyHotelPositions.includes(getHotelPosition(el))) {
                        el.value = anesthesiaTemplate['anesthesia']['anesthesia'];
                    }
                });
                document.querySelectorAll(`input[id*=routeOfAdministration]`).forEach((el) => {
                    if (nonemptyHotelPositions.includes(getHotelPosition(el))) {
                        el.value = anesthesiaTemplate['anesthesia']['routeOfAdministration'];
                    }
                });
            });
        }
    }

    const handleHeatingConditionsTemplateChange = () => {
        const heatingConditionsTemplate = heatingConditionsSelector.value;
        if (heatingConditionsTemplate.length > 0) {
            XNAT.plugin.pixi.imageAcqCtx.heatingConditions.get(scope, entityId).then((heatingConditionsConfig) => {
                const heatingConditionsTemplate = heatingConditionsConfig['templates'].find(heatingConditionsTemplate => heatingConditionsTemplate['name'] === heatingConditionsSelector.value);

                // populate empty hotel positions
                const nonemptyHotelPositions = [];
                document.querySelectorAll('select[name*=subject_id]').forEach((el) => {
                    if (el.value !== '') {
                        nonemptyHotelPositions.push(getHotelPosition(el));
                    }
                });

                document.querySelectorAll(`select[name*=procedurePhase]`).forEach((el) => {
                    if (nonemptyHotelPositions.includes(getHotelPosition(el))) {
                        el.value = heatingConditionsTemplate['heatingConditions']['procedurePhase'];
                    }
                });
                document.querySelectorAll(`input[id*=heatingMethod]`).forEach((el) => {
                    if (nonemptyHotelPositions.includes(getHotelPosition(el))) {
                        el.value = heatingConditionsTemplate['heatingConditions']['heatingMethod'];
                    }
                });
                document.querySelectorAll(`select[id*=feedbackTemperatureRegulation]`).forEach((el) => {
                    if (nonemptyHotelPositions.includes(getHotelPosition(el))) {
                        el.value =
                                heatingConditionsTemplate['heatingConditions']['feedbackTemperatureRegulation'] === true ? '1' :
                                        heatingConditionsTemplate['heatingConditions']['feedbackTemperatureRegulation'] === false ? '0' :
                                                '';
                    }
                });
                document.querySelectorAll(`input[id*=temperatureSensorDeviceComponent]`).forEach((el) => {
                    if (nonemptyHotelPositions.includes(getHotelPosition(el))) {
                        el.value = heatingConditionsTemplate['heatingConditions']['temperatureSensorDeviceComponent'];
                    }
                });
                document.querySelectorAll(`input[id*=setpointTemperature]`).forEach((el) => {
                    if (nonemptyHotelPositions.includes(getHotelPosition(el))) {
                        el.value = heatingConditionsTemplate['heatingConditions']['setpointTemperature'] ? heatingConditionsTemplate['heatingConditions']['setpointTemperature'] : '';
                    }
                });
            });
        }
    }

    const applyTemplates = () => {
        handleFastingTemplateChange();
        handleAnesthesiaTemplateChange();
        handleHeatingConditionsTemplateChange();
    }

    const applyButton = document.getElementById('apply-templates');
    applyButton.addEventListener('click', applyTemplates);

</script>

<script type="text/javascript">
	function validateForm()
	{
		//INSERT CUSTOM CONTENT HERE

		validateExperimentForm();
		return false;
	}
</script>
